{"version":3,"sources":["api.ts","types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Select","TodoList","filteredTodos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","todos","setFilteredTodos","useState","query","setQuery","All","selectedCategory","setSelectedCategory","useEffect","normalizedQuery","toLowerCase","Completed","filter","Active","includes","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","loading","setLoading","hasSelectedTodo","user","setUser","userId","catch","finally","href","name","App","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2f0a404.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  { filteredTodos, selectedTodo, setSelectedTodo },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          filteredTodos.map(todo => {\n            return (\n              <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames(\n                    todo.completed ? 'has-text-success' : 'has-text-danger',\n                  )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setSelectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames(\n                        selectedTodo?.id !== todo.id\n                          ? 'far fa-eye'\n                          : 'far fa-eye-slash',\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport { Select } from '../../types/Select';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setFilteredTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<Select>(Select.All);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCategory(event.target.value as Select);\n  };\n\n  useEffect(() => {\n    let filteredTodos = todos;\n    const normalizedQuery = query.toLowerCase();\n\n    switch (selectedCategory) {\n      case Select.Completed:\n        filteredTodos = filteredTodos.filter((todo: Todo) => todo.completed);\n        break;\n      case Select.Active:\n        filteredTodos = filteredTodos.filter((todo: Todo) => !todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos\n        .filter((todo: Todo) => todo.title.toLowerCase()\n          .includes(normalizedQuery));\n    }\n\n    setFilteredTodos(filteredTodos);\n  }, [query, selectedCategory]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedCategory}\n            onChange={handleSelectChange}\n          >\n            <option value={`${Select.All}`}>\n              All\n            </option>\n            <option value={`${Select.Active}`}>\n              Active\n            </option>\n            <option value={`${Select.Completed}`}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { selectedTodo, setSelectedTodo },\n) => {\n  const [loading, setLoading] = useState(true);\n  const hasSelectedTodo = selectedTodo !== null;\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (selectedTodo !== null) {\n      getUser(selectedTodo.id)\n        .then(setUser)\n        .catch(() => { })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      {!loading && (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {hasSelectedTodo && (\n                selectedTodo.title\n              )}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed && (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {!selectedTodo?.completed && (\n                <strong className=\"has-text-danger\">Planned</strong>\n\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then((res) => {\n          setTodos(res);\n          setFilteredTodos(res);\n        })\n        .catch(() => { })\n        .finally(() => setLoading(false));\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && (\n                <TodoList\n                  filteredTodos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}